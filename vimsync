#!/bin/sh

XDG_CONFIG_HOME="$HOME/.config"
XDG_DATA_HOME="$HOME/.local/share"

cp_error()
{
	echo "Error copying config files, aborting"
	exit 1
}

wget_error()
{
	echo "Error fetching config files, aborting"
	exit 1
}

mv_error()
{
	echo "Error moving config files, aborting"
	echo "Files that couldn't be moved will be left in this directory"
	exit 1
}

syntax_error()
{
	print_help
	exit 1
}

mkdir_error()
{
  echo "Error creating directory, aborting"
  exit 1
}

print_help()
{
	printf "USAGE:
	\t./vimsync OPTION
	OPTIONS:
	\t-h       : show this help message
	\t-l       : sync with local files (you need to have cloned the repo for this to work)
	\t-r REMOTE: sync remotely from remote, possible values for REMOTE are 'github' or 'gitea'\n"
}

local_sync()
{
	cp -i vimrc               "$XDG_CONFIG_HOME"/vim/vimrc &&
	cp -i kwinrc              "$XDG_CONFIG_HOME"/kwinrc &&
	cp -i kglobalshortcutsrc  "$XDG_CONFIG_HOME"/kglobalshortcutsrc &&
	cp -i dracula.colorscheme "$XDG_DATA_HOME"/konsole/dracula.colorscheme ||
	cp_error
}

remote_sync()
{
	for url in $url_list; do
		wget -q "$url" || wget_error
	done

	mv -i ./vimrc             "$XDG_CONFIG_HOME"/vim/vimrc &&
	mv -i kwinrc              "$XDG_CONFIG_HOME"/kwinrc &&
	mv -i kglobalshortcutsrc  "$XDG_CONFIG_HOME"/kglobalshortcutsrc &&
	mv -i dracula.colorscheme "$XDG_DATA_HOME"/konsole/dracula.colorscheme ||
	mv_error
}

local_mode=false
remote_mode=false

while getopts lr:h option; do
	case $option in
		(l)
			local_mode=true;;
		(r)
			remote_mode=true
			remote="$OPTARG"

			if [ "$remote" = "github" ]
			then
				base="https://raw.githubusercontent.com"
				vimrc_url="$base/leg7/vimsync/master/vimrc"
				kwinrc_url="$base/leg7/vimsync/master/kwinrc"
				kshortcuts_url="$base/leg7/vimsync/master/kglobalshortcutsrc"
				konsole_url="$base/leg7/vimsync/master/dracula.colorscheme"
			elif [ "$remote" = "gitea" ]
			then
				base="https://git.leonardgomez.xyz"
				vimrc_url="$base/leg7/vimsinc/raw/branch/master/vimrc"
				kwinrc_url="$base/leg7/vimsync/raw/branch/master/kwinrc"
				kshortcuts_url="$base/leg7/vimsync/raw/branch/master/kglobalshortcutsrc"
				konsole_url="$base/leg7/vimsync/raw/branch/master/dracula.colorscheme"
			else
				syntax_error
			fi

			url_list="$vimrc_url $kwinrc_url $kshortcuts_url $konsole_url";;
		(h | *)
			syntax_error;;
	esac
done


if $local_mode && $remote_mode; then
	syntax_error
fi

mkdir -p "$XDG_CONFIG_HOME"/vim || mkdir_error
if $local_mode; then
	local_sync
elif $remote_mode; then
	remote_sync
fi

#################
### Configure ###
#################

# I should make the bashrc source a shell script with my config instead

# We export these variables for later shell sessions
{ echo 'export XDG_CONFIG_HOME="$HOME/.config"';
echo 'export XDG_DATA_HOME="$HOME/.local/share"';
echo 'export XDG_CACHE_HOME="$HOME/.local/cache"';
echo 'export VIMINIT="set nocp | source ${XDG_CONFIG_HOME:-$HOME/.config}/vim/vimrc"';
echo 'konsoleprofile colors=Dracula' ; } >> "$HOME"/.bashrc

# Add vi mode to bash and change keyboard settings. Just press 1 or 9 to change the layout if needed
setxkbmap -layout us -variant dvp -option caps:swapescape
{ echo "set -o vi";
echo 'alias 9="setxkbmap fr -option caps:swapescape"';
echo 'alias 1="setxkbmap -layout us -variant dvp -option caps:swapescape"'; } >> "$HOME"/.bashrc

# We need to do this to source the new bashrc
killall konsole && konsole &
kwinrc --replace &
